# spellchecker:ignore taiki dtolnay Taplo xvzf musleabihf gnueabihf msvc clippy

name: CI Pipeline

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  # Download link for the `cargo-deny` binary to use.
  CARGO_DENY_URL: https://github.com/EmbarkStudios/cargo-deny/releases/download/0.18.3/cargo-deny-0.18.3-x86_64-unknown-linux-musl.tar.gz
  # Download link for the `cross` binary to use.
  CROSS_URL: https://github.com/cross-rs/cross/releases/download/v0.2.5/cross-x86_64-unknown-linux-gnu.tar.gz

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Just
        uses: taiki-e/install-action@just
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy
      - name: Install Taplo
        uses: dtolnay/install@taplo-cli
      - name: Install Cargo Deny
        run: curl -s -L "$CARGO_DENY_URL" | tar xvzf - -C /usr/local/bin --strip-components=1 --wildcards --no-anchored 'cargo-deny'
      - name: Run Checks
        run: just check
  test:
    name: Test
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Install Just
        uses: taiki-e/install-action@just
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Run Tests
        run: just test
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            cross: true
          - os: ubuntu-latest
            target: arm-unknown-linux-musleabihf
            cross: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            cross: true
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            cross: true
          - os: ubuntu-latest
            target: arm-unknown-linux-gnueabihf
            cross: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            cross: true
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Install Just
        uses: taiki-e/install-action@just
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        if: ${{ !matrix.cross }}
        with:
          target: ${{ matrix.target }}
      - name: Install Cross
        if: ${{ matrix.cross }}
        run: curl -s -L "$CROSS_URL" | tar xvzf - -C /usr/local/bin
      - name: Run Build
        run: just build ${{ matrix.target }} ${{ matrix.cross }}
      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.target }}
          path: build/binaries/${{ matrix.target }}.tar.gz
          if-no-files-found: error
