{
  "openapi": "3.0.1",
  "info": {
    "title": "Nexigon Hub API",
    "version": "0.1.0",
    "description": "Welcome to the Nexigon Hub API documentation!\n\nNexigon Hub offers an RPC-style HTTP API.\n"
  },
  "paths": {
    "/api/v1/actions/invoke/users_Query": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Query",
        "description": "Query the users of the instance.",
        "operationId": "users_QueryUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.QueryUsersAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.QueryUsersOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_GetDetails": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "GetDetails",
        "description": "Get information about a user.",
        "operationId": "users_GetUserDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.GetUserDetailsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.GetUserDetailsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_CreateUser": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "CreateUser",
        "description": "Create a new user.",
        "operationId": "users_CreateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.CreateUserAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.CreateUserOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_DeleteUser": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "DeleteUser",
        "description": "Delete a user.",
        "operationId": "users_DeleteUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.DeleteUserAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_SetDisplayName": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "SetDisplayName",
        "description": "Set the display name of a user.",
        "operationId": "users_SetUserDisplayName",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.SetUserDisplayNameAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_SetPassword": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "SetPassword",
        "description": "Set the password of a user.",
        "operationId": "users_SetUserPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.SetUserPasswordAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_SetIsAdmin": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "SetIsAdmin",
        "description": "Set whether the user is an instance administrator.",
        "operationId": "users_SetUserIsAdmin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.SetUserIsAdminAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_QueryTokens": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "QueryTokens",
        "description": "Query the tokens of a user.",
        "operationId": "users_QueryUserTokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.QueryUserTokensAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.QueryUserTokensOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_QueryOrganizations": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "QueryOrganizations",
        "description": "Query the organizations of a user.",
        "operationId": "users_QueryOrganizations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.QueryUserOrganizationsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.QueryUserOrganizationsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_QueryOrganizationInvitations": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "QueryOrganizationInvitations",
        "description": "Query the organization invitations of a user.",
        "operationId": "users_QueryOrganizationInvitations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.QueryUserOrganizationInvitationsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.QueryUserOrganizationInvitationsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_QuerySessions": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "QuerySessions",
        "description": "Query the sessions of a user.",
        "operationId": "users_QueryUserSessions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.QueryUserSessionsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.QueryUserSessionsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_AuthenticateWithToken": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "AuthenticateWithToken",
        "description": "Authenticate a user with a token.",
        "operationId": "users_AuthenticateWithUserToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.AuthenticateWithUserTokenAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.AuthenticateWithUserTokenOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_AuthenticateWithSessionToken": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "AuthenticateWithSessionToken",
        "description": "Authenticate a user with a session token.",
        "operationId": "users_AuthenticateWithSessionToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.AuthenticateWithSessionTokenAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.AuthenticateWithSessionTokenOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_GetDevicePermissions": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "GetDevicePermissions",
        "description": "Check the permissions of a user for a given device.",
        "operationId": "users_GetDevicePermissions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.GetDevicePermissionsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.GetDevicePermissionsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_CreateToken": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "CreateToken",
        "description": "Create a user token.",
        "operationId": "users_CreateUserToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.CreateUserTokenAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.CreateUserTokenOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_DeleteToken": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "DeleteToken",
        "description": "Delete a user token.",
        "operationId": "users_DeleteUserToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.DeleteUserTokenAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_InitiateSession": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "InitiateSession",
        "description": "Initiate a user session.",
        "operationId": "users_InitiateUserSession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.InitiateUserSessionAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.InitiateUserSessionOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_TerminateSession": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "TerminateSession",
        "description": "Terminate a user session.",
        "operationId": "users_TerminateUserSession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.TerminateUserSessionAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_CleanupExpiredSessions": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "CleanupExpiredSessions",
        "description": "Cleanup expired user sessions.",
        "operationId": "users_CleanupExpiredUserSessions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.CleanupExpiredUserSessionsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_Register": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Register",
        "description": "Register a new user with an email and password.",
        "operationId": "users_RegisterUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.RegisterUserAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.RegisterUserOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_ResendRegistrationEmail": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "ResendRegistrationEmail",
        "description": "",
        "operationId": "users_ResendRegistrationEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.ResendRegistrationEmailAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_CompleteRegistration": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "CompleteRegistration",
        "description": "Complete the registration of a user.",
        "operationId": "users_CompleteRegistration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.CompleteRegistrationAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.users.CompleteRegistrationOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/users_AcceptOrganizationInvitation": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "AcceptOrganizationInvitation",
        "description": "Accept a organization invitation.",
        "operationId": "users_AcceptOrganizationInvitation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.users.AcceptOrganizationInvitationAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/organizations_Query": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Query",
        "description": "Query the organizations of the instance.",
        "operationId": "organizations_Query",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/organizations_QueryMembers": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "QueryMembers",
        "description": "Query the members of an organization.",
        "operationId": "organizations_QueryMembers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationMembersAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationMembersOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/organizations_QueryProjects": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "QueryProjects",
        "description": "Query the projects of an organization.",
        "operationId": "organizations_QueryProjects",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationProjectsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationProjectsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/organizations_QueryRepositories": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "QueryRepositories",
        "description": "Query the repositories of an organization.",
        "operationId": "organizations_QueryRepositories",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationRepositoriesAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationRepositoriesOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/organizations_QueryInvitations": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "QueryInvitations",
        "description": "Query the invitations of an organization.",
        "operationId": "organizations_QueryInvitations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationInvitationsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationInvitationsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/organizations_Create": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Create",
        "description": "Create an organization.",
        "operationId": "organizations_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.organizations.CreateOrganizationAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.organizations.CreateOrganizationOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/organizations_Delete": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Delete",
        "description": "Delete an organization.",
        "operationId": "organizations_Delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.organizations.DeleteOrganizationAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/organizations_AddMember": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "AddMember",
        "description": "Add a user to an organization.",
        "operationId": "organizations_AddMember",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.organizations.AddOrganizationMemberAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/organizations_RemoveMember": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "RemoveMember",
        "description": "Remove a user from an organization.",
        "operationId": "organizations_RemoveMember",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.organizations.RemoveOrganizationMemberAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/organizations_InviteMember": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "InviteMember",
        "description": "Invite a user to an organization.",
        "operationId": "organizations_InviteMember",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.organizations.InviteOrganizationMemberAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.organizations.InviteOrganizationMemberOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/organizations_DeleteInvitation": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "DeleteInvitation",
        "description": "Delete an invitation to an organization.",
        "operationId": "organizations_DeleteInvitation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.organizations.DeleteOrganizationInvitationAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_Query": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Query",
        "description": "Query the projects of the instance.",
        "operationId": "projects_QueryProjects",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.QueryProjectsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.projects.QueryProjectsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_GetDetails": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "GetDetails",
        "description": "Get information about a project.",
        "operationId": "projects_GetProjectDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.GetProjectDetailsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.projects.GetProjectDetailsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_Create": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create",
        "description": "Create a new project.",
        "operationId": "projects_CreateProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.CreateProjectAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.projects.CreateProjectOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_Delete": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Delete",
        "description": "Delete a project.",
        "operationId": "projects_DeleteProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.DeleteProjectAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_QueryDevices": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "QueryDevices",
        "description": "Query the devices of a project.",
        "operationId": "projects_QueryProjectDevices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.QueryProjectDevicesAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.projects.QueryProjectDevicesOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_QueryDeploymentTokens": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "QueryDeploymentTokens",
        "description": "Query the deployment tokens of a project.",
        "operationId": "projects_QueryProjectDeploymentTokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.QueryProjectDeploymentTokensAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.projects.QueryProjectDeploymentTokensOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_QueryLinkedRepositories": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "QueryLinkedRepositories",
        "description": "Query repositories of a project.",
        "operationId": "projects_QueryProjectRepositories",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.QueryProjectRepositoriesAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.projects.QueryProjectRepositoriesOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_SetOrganization": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "SetOrganization",
        "description": "Set the organization of a project.",
        "operationId": "projects_SetProjectOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.SetProjectOrganizationAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_CreateDeploymentToken": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "CreateDeploymentToken",
        "description": "Create a deployment token.",
        "operationId": "projects_CreateDeploymentToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.CreateDeploymentTokenAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.projects.CreateDeploymentTokenOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_DeleteDeploymentToken": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "DeleteDeploymentToken",
        "description": "Delete a deployment token.",
        "operationId": "projects_DeleteDeploymentToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.DeleteDeploymentTokenAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_SetDeploymentTokenFlags": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "SetDeploymentTokenFlags",
        "description": "Set the flags of a deployment token.",
        "operationId": "projects_SetDeploymentTokenFlags",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.SetDeploymentTokenFlagsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_QueryAuditLog": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "QueryAuditLog",
        "description": "Query the audit log of the project.",
        "operationId": "projects_QueryAuditLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.QueryAuditLogEventsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.projects.QueryAuditLogEventsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_LinkRepository": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "LinkRepository",
        "description": "Add a repository to the project.",
        "operationId": "projects_AddProjectRepository",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.AddProjectRepositoryAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/projects_UnlinkRepository": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "UnlinkRepository",
        "description": "Remove a repository from the project.",
        "operationId": "projects_RemoveProjectRepository",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.projects.RemoveProjectRepositoryAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_Devices": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Devices",
        "description": "Query the devices of the instance.",
        "operationId": "devices_QueryDevices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.QueryDevicesAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.QueryDevicesOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_GetDetails": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "GetDetails",
        "description": "Get information about a device.",
        "operationId": "devices_GetDeviceDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.GetDeviceDetailsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.GetDeviceDetailsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_Create": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Create",
        "description": "Create a new device.",
        "operationId": "devices_CreateDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.CreateDeviceAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.CreateDeviceOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_Delete": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Delete",
        "description": "Delete a device.",
        "operationId": "devices_DeleteDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.DeleteDeviceAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_SetName": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "SetName",
        "description": "Set the name of a device.",
        "operationId": "devices_SetDeviceName",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.SetDeviceNameAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_SetDeviceMetadata": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "SetDeviceMetadata",
        "description": "Set the metadata of a device.",
        "operationId": "devices_SetDeviceMetadata",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.SetDeviceMetadataAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_IssueDeviceToken": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "IssueDeviceToken",
        "description": "Issue a JWT for a device with user-defined claims.\n\n**Note: Only use this action for integration with external systems.**",
        "operationId": "devices_IssueDeviceToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.IssueDeviceTokenAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.IssueDeviceTokenOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_ValidateDeviceToken": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "ValidateDeviceToken",
        "description": "Validate a device JWT.\n\n**Note: Only use this action for integration with external systems.**",
        "operationId": "devices_ValidateDeviceToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.ValidateDeviceTokenAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.ValidateDeviceTokenOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_Authenticate": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Authenticate",
        "description": "Authenticate a device.\n\n**Note: The certificate fingerprint must be externally verified (mutual TLS).**",
        "operationId": "devices_AuthenticateDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.AuthenticateDeviceAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.AuthenticateDeviceOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_AddCertificate": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "AddCertificate",
        "description": "Add a device certificate.",
        "operationId": "devices_AddDeviceCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.AddDeviceCertificateAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.AddDeviceCertificateOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_DeleteCertificate": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "DeleteCertificate",
        "description": "Delete a device certificate.",
        "operationId": "devices_DeleteDeviceCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.DeleteDeviceCertificateAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_SetCertificateStatus": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "SetCertificateStatus",
        "description": "Set the status of a device certificate.",
        "operationId": "devices_SetDeviceCertificateStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.SetDeviceCertificateStatusAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_RegisterConnection": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "RegisterConnection",
        "description": "Register a connection of a device to a cluster node.",
        "operationId": "devices_RegisterDeviceConnection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.RegisterDeviceConnectionAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.RegisterDeviceConnectionOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_UnregisterConnection": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "UnregisterConnection",
        "description": "Unregister a connection of a device to a cluster node.",
        "operationId": "devices_UnregisterDeviceConnection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.UnregisterDeviceConnectionAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_IssueHttpProxyToken": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "IssueHttpProxyToken",
        "description": "Issue a HTTP proxy JWT.",
        "operationId": "devices_IssueDeviceHttpProxyToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.IssueDeviceHttpProxyTokenAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.IssueDeviceHttpProxyTokenOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_ValidateHttpProxyToken": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "ValidateHttpProxyToken",
        "description": "Validate a HTTP proxy JWT.",
        "operationId": "devices_ValidateDeviceHttpProxyToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.ValidateDeviceHttpProxyTokenAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.ValidateDeviceHttpProxyTokenOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_PublishEvents": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "PublishEvents",
        "description": "Publish device events.",
        "operationId": "devices_PublishDeviceEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.PublishDeviceEventsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_QueryEvents": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "QueryEvents",
        "description": "Query device events.",
        "operationId": "devices_QueryDeviceEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.QueryDeviceEventsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.QueryDeviceEventsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_SetProperty": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "SetProperty",
        "description": "Set a property of a device.",
        "operationId": "devices_SetDeviceProperty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.SetDevicePropertyAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_GetProperty": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "GetProperty",
        "description": "Get a property of a device.",
        "operationId": "devices_GetDeviceProperty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.GetDevicePropertyAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.GetDevicePropertyOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/devices_QueryProperties": {
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "QueryProperties",
        "description": "Query the properties of a device.",
        "operationId": "devices_QueryDeviceProperties",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.devices.QueryDevicePropertiesAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.devices.QueryDevicePropertiesOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_ResolveName": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "ResolveName",
        "description": "Resolve a repository by its name.",
        "operationId": "repositories_ResolveRepositoryName",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.ResolveRepositoryNameAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.ResolveRepositoryNameOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_GetDetails": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "GetDetails",
        "description": "Get information about a repository.",
        "operationId": "repositories_GetRepositoryDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.GetRepositoryDetailsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.GetRepositoryDetailsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_Create": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "Create",
        "description": "Create a new repository.",
        "operationId": "repositories_CreateRepository",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.CreateRepositoryAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.CreateRepositoryOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_Delete": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "Delete",
        "description": "Delete a repository.",
        "operationId": "repositories_DeleteRepository",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.DeleteRepositoryAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_SetOrganization": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "SetOrganization",
        "description": "Set the organization of a repository.",
        "operationId": "repositories_SetOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.SetRepositoryOrganizationAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_SetVisibility": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "SetVisibility",
        "description": "Set the visibility of a repository.",
        "operationId": "repositories_SetRepositoryVisibility",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.SetRepositoryVisibilityAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_QueryPackages": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "QueryPackages",
        "description": "Query the packages of a repository.",
        "operationId": "repositories_QueryRepositoryPackages",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.QueryRepositoryPackagesAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.QueryRepositoryPackagesOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_QueryAssets": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "QueryAssets",
        "description": "Query the assets of a repository.",
        "operationId": "repositories_QueryRepositoryAssets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.QueryRepositoryAssetsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.QueryRepositoryAssetsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_QueryLinkedProjects": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "QueryLinkedProjects",
        "description": "Query repository projects.",
        "operationId": "repositories_QueryRepositoryProjects",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.QueryRepositoryProjectsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.QueryRepositoryProjectsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_ResolvePackageByPath": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "ResolvePackageByPath",
        "description": "Resolve a package by its path.",
        "operationId": "repositories_ResolvePackageByPath",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.ResolvePackageByPathAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.ResolvePackageByPathOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_GetPackageDetails": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "GetPackageDetails",
        "description": "Get information about a package.",
        "operationId": "repositories_GetPackageDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.GetPackageDetailsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.GetPackageDetailsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_CreatePackage": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "CreatePackage",
        "description": "Create a new package.",
        "operationId": "repositories_CreatePackage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.CreatePackageAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.CreatePackageOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_DeletePackage": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "DeletePackage",
        "description": "Delete a package.",
        "operationId": "repositories_DeletePackage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.DeletePackageAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_QueryPackageVersions": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "QueryPackageVersions",
        "description": "Query the versions of a package.",
        "operationId": "repositories_QueryPackageVersions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.QueryPackageVersionsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.QueryPackageVersionsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_ResolvePackageVersionByPath": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "ResolvePackageVersionByPath",
        "description": "Resolve a package version by its path.",
        "operationId": "repositories_ResolvePackageVersionByPath",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.ResolvePackageVersionByPathAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.ResolvePackageVersionByPathOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_GetPackageVersionDetails": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "GetPackageVersionDetails",
        "description": "Get information about a package version.",
        "operationId": "repositories_GetPackageVersionDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.GetPackageVersionDetailsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.GetPackageVersionDetailsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_CreatePackageVersion": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "CreatePackageVersion",
        "description": "Create a new package version.",
        "operationId": "repositories_CreatePackageVersion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.CreatePackageVersionAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.CreatePackageVersionOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_DeletePackageVersion": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "DeletePackageVersion",
        "description": "Delete a package version.",
        "operationId": "repositories_DeletePackageVersion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.DeletePackageVersionAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_AddPackageVersionAsset": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "AddPackageVersionAsset",
        "description": "Add an assert to a package version.",
        "operationId": "repositories_AddPackageVersionAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.AddPackageVersionAssetAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.AddPackageVersionAssetOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_RemovePackageVersionAsset": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "RemovePackageVersionAsset",
        "description": "Remove an asset from a package version.",
        "operationId": "repositories_RemovePackageVersionAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.RemovePackageVersionAssetAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_TagPackageVersion": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "TagPackageVersion",
        "description": "Add tags to a version.",
        "operationId": "repositories_TagPackageVersion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.TagPackageVersionAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_UntagPackageVersion": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "UntagPackageVersion",
        "description": "Remove tags from a version.",
        "operationId": "repositories_UntagPackageVersion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.UntagPackageVersionAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_ResolvePackageVersionAssetByPath": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "ResolvePackageVersionAssetByPath",
        "description": "Resolve a version asset by its path.",
        "operationId": "repositories_ResolvePackageVersionAssetByPath",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.ResolvePackageVersionAssetByPathAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.ResolvePackageVersionAssetByPathOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_SetS3Config": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "SetS3Config",
        "description": "Set the S3 configuration for the repository.",
        "operationId": "repositories_SetRepositoryS3Config",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.SetRepositoryS3ConfigAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_GetS3Config": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "GetS3Config",
        "description": "Get the S3 configuration for the repository.",
        "operationId": "repositories_GetRepositoryS3Config",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.GetRepositoryS3ConfigAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.GetRepositoryS3ConfigOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_GetAssetDetails": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "GetAssetDetails",
        "description": "Get information about an asset.",
        "operationId": "repositories_GetAssetDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.GetAssetDetailsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.GetAssetDetailsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_CreateAsset": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "CreateAsset",
        "description": "Create an asset.",
        "operationId": "repositories_CreateAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.CreateAssetAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.CreateAssetOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_DeleteAsset": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "DeleteAsset",
        "description": "Delete an asset.",
        "operationId": "repositories_DeleteAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.DeleteAssetAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_IssueAssetDownloadUrl": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "IssueAssetDownloadUrl",
        "description": "Issue a URL for downloading an asset.",
        "operationId": "repositories_IssueAssetDownloadUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.IssueAssetDownloadUrlAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.IssueAssetDownloadUrlOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_IssueAssetUploadUrl": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "IssueAssetUploadUrl",
        "description": "Issue a URL for uploading an asset.",
        "operationId": "repositories_IssueAssetUploadUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.IssueAssetUploadUrlAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.IssueAssetUploadUrlOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/repositories_QueryAuditLog": {
      "post": {
        "tags": [
          "repositories"
        ],
        "summary": "QueryAuditLog",
        "description": "Query the audit log of the repository.",
        "operationId": "repositories_QueryAuditLogEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.repositories.QueryAuditLogEventsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.repositories.QueryAuditLogEventsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/audit_QueryAuditLogEvents": {
      "post": {
        "tags": [
          "audit"
        ],
        "summary": "QueryAuditLogEvents",
        "description": "Query the events recorded in the audit log.\n\nRequires administrator permissions.",
        "operationId": "audit_QueryAuditLogEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.audit.QueryAuditLogEventsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.audit.QueryAuditLogEventsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/audit_QueryAuditLogActions": {
      "post": {
        "tags": [
          "audit"
        ],
        "summary": "QueryAuditLogActions",
        "description": "Query the actions recorded in the audit log.\n\nRequires administrator permissions.",
        "operationId": "audit_QueryAuditLogActions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.audit.QueryAuditLogActionsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.audit.QueryAuditLogActionsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/jobs_Query": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Query",
        "description": "Query the jobs of the instance.",
        "operationId": "jobs_QueryJobs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.jobs.QueryJobsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.jobs.QueryJobsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/instance_GetStatistics": {
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "GetStatistics",
        "description": "Get instance statistics.",
        "operationId": "instance_GetInstanceStatistics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.instance.GetInstanceStatisticsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.instance.GetInstanceStatisticsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/instance_GetSettingsRaw": {
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "GetSettingsRaw",
        "description": "Get the settings of the instance.",
        "operationId": "instance_GetInstanceSettingsRaw",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.instance.GetInstanceSettingsRawAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.instance.GetInstanceSettingsRawOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/instance_SetSettingRaw": {
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "SetSettingRaw",
        "description": "Set a setting of the instance.",
        "operationId": "instance_SetInstanceSettingRaw",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.instance.SetInstanceSettingRawAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/cluster_GetDetails": {
      "post": {
        "tags": [
          "cluster"
        ],
        "summary": "GetDetails",
        "description": "Get information about the cluster.",
        "operationId": "cluster_GetClusterDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.cluster.GetClusterDetailsAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.cluster.GetClusterDetailsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/cluster_RegisterNode": {
      "post": {
        "tags": [
          "cluster"
        ],
        "summary": "RegisterNode",
        "description": "Register a new cluster node.",
        "operationId": "cluster_RegisterClusterNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.cluster.RegisterClusterNodeAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.cluster.RegisterClusterNodeOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/cluster_ReportNodeHeartbeat": {
      "post": {
        "tags": [
          "cluster"
        ],
        "summary": "ReportNodeHeartbeat",
        "description": "Report the heartbeat of a cluster node.",
        "operationId": "cluster_ReportClusterNodeHeartbeat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.cluster.ReportClusterNodeHeartbeatAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/cluster_CleanupInactiveNodes": {
      "post": {
        "tags": [
          "cluster"
        ],
        "summary": "CleanupInactiveNodes",
        "description": "Cleanup inactive cluster nodes.",
        "operationId": "cluster_CleanupInactiveClusterNodes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.cluster.CleanupInactiveClusterNodesAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.outputs.Empty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/invoke/actor_GetActor": {
      "post": {
        "tags": [
          "actor"
        ],
        "summary": "GetActor",
        "description": "Get the actor.\n\nThis action is used to get the actor that is used to invoke the action.",
        "operationId": "actor_GetActor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nexigon_api.actor.GetActorAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nexigon_api.actor.GetActorOutput"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "nexigon_api.actor.Actor": {
        "description": "Actor that may invoke actions in the system.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "actor": {
                "const": "Anonymous"
              }
            },
            "required": [
              "actor"
            ]
          },
          {
            "type": "object",
            "properties": {
              "actor": {
                "const": "System"
              }
            },
            "required": [
              "actor"
            ]
          },
          {
            "type": "object",
            "properties": {
              "actor": {
                "const": "Device"
              },
              "deviceId": {
                "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
              },
              "tokenId": {
                "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenId"
              }
            },
            "required": [
              "actor",
              "deviceId",
              "tokenId"
            ]
          },
          {
            "type": "object",
            "properties": {
              "actor": {
                "const": "User"
              },
              "userId": {
                "$ref": "#/components/schemas/nexigon_api.users.UserId"
              }
            },
            "required": [
              "actor",
              "userId"
            ]
          },
          {
            "type": "object",
            "properties": {
              "actor": {
                "const": "UserToken"
              },
              "userId": {
                "$ref": "#/components/schemas/nexigon_api.users.UserId"
              },
              "tokenId": {
                "$ref": "#/components/schemas/nexigon_api.users.UserTokenId"
              }
            },
            "required": [
              "actor",
              "userId",
              "tokenId"
            ]
          },
          {
            "type": "object",
            "properties": {
              "actor": {
                "const": "ClusterNode"
              },
              "nodeId": {
                "$ref": "#/components/schemas/nexigon_api.cluster.ClusterNodeId"
              }
            },
            "required": [
              "actor",
              "nodeId"
            ]
          }
        ]
      },
      "nexigon_api.actor.AnonymousActor": {
        "type": "object",
        "description": "Anonymous actor, typically used for unauthenticated actions.",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.actor.ClusterNodeActor": {
        "type": "object",
        "description": "Cluster node.",
        "properties": {
          "nodeId": {
            "$ref": "#/components/schemas/nexigon_api.cluster.ClusterNodeId"
          }
        },
        "required": [
          "nodeId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.actor.DeviceActor": {
        "type": "object",
        "description": "Device authenticated via a specific deployment token.",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenId"
          }
        },
        "required": [
          "deviceId",
          "tokenId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.actor.GetActorAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.actor.GetActorOutput": {
        "type": "object",
        "description": "Output of getting the actor.",
        "properties": {
          "actor": {
            "$ref": "#/components/schemas/nexigon_api.actor.Actor"
          }
        },
        "required": [
          "actor"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.actor.SystemActor": {
        "type": "object",
        "description": "System actor, typically used for internal actions.",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.actor.UserActor": {
        "type": "object",
        "description": "User authenticated via a user session.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.actor.UserTokenActor": {
        "type": "object",
        "description": "User authenticated via a specific token.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserTokenId"
          }
        },
        "required": [
          "userId",
          "tokenId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.audit.AuditLogAction": {
        "type": "object",
        "description": "Action recorded in the audit log.\n\nAudit data is guaranteed to not contain any secret information.",
        "properties": {
          "actionId": {
            "$ref": "#/components/schemas/nexigon_api.audit.AuditLogActionId"
          },
          "actor": {
            "$ref": "#/components/schemas/nexigon_api.actor.Actor"
          },
          "action": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
            }
          },
          "status": {
            "$ref": "#/components/schemas/nexigon_api.audit.AuditLogActionStatus"
          },
          "createdAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          }
        },
        "required": [
          "actionId",
          "actor",
          "action",
          "data",
          "status",
          "createdAt"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.audit.AuditLogActionId": {
        "type": "string",
        "description": "Unique ID of an audit log action."
      },
      "nexigon_api.audit.AuditLogActionStatus": {
        "enum": [
          "Rejected",
          "Panicked",
          "Succeeded",
          "Failed",
          "Pending"
        ],
        "description": "Status associated with an audit log action."
      },
      "nexigon_api.audit.AuditLogEvent": {
        "type": "object",
        "description": "Event recorded in the audit log.\n\nAudit data is guaranteed to not contain any secret information.",
        "properties": {
          "eventId": {
            "$ref": "#/components/schemas/nexigon_api.audit.AuditLogEventId"
          },
          "actor": {
            "$ref": "#/components/schemas/nexigon_api.actor.Actor"
          },
          "event": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
          },
          "createdAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          },
          "action": {
            "$ref": "#/components/schemas/nexigon_api.audit.AuditLogEventAction"
          },
          "job": {
            "$ref": "#/components/schemas/nexigon_api.audit.AuditLogEventJob"
          }
        },
        "required": [
          "eventId",
          "actor",
          "event",
          "data",
          "createdAt"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.audit.AuditLogEventAction": {
        "type": "object",
        "description": "Action that caused an event.",
        "properties": {
          "actionId": {
            "$ref": "#/components/schemas/nexigon_api.audit.AuditLogActionId"
          }
        },
        "required": [
          "actionId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.audit.AuditLogEventId": {
        "type": "string",
        "description": "Unique ID of an audit log event."
      },
      "nexigon_api.audit.AuditLogEventJob": {
        "type": "object",
        "description": "Job that caused an event.",
        "properties": {
          "jobId": {
            "$ref": "#/components/schemas/nexigon_api.jobs.JobId"
          }
        },
        "required": [
          "jobId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.audit.QueryAuditLogActionsAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.audit.QueryAuditLogActionsOutput": {
        "type": "object",
        "description": "Output of querying the actions recorded in the audit log.",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.audit.AuditLogAction"
            }
          }
        },
        "required": [
          "actions"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.audit.QueryAuditLogEventsAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.audit.QueryAuditLogEventsOutput": {
        "type": "object",
        "description": "Output of querying the events recorded in the audit log.",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.audit.AuditLogEvent"
            }
          }
        },
        "required": [
          "events"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.cluster.CleanupInactiveClusterNodesAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.cluster.ClusterNode": {
        "type": "object",
        "description": "Cluster node.",
        "properties": {
          "nodeId": {
            "$ref": "#/components/schemas/nexigon_api.cluster.ClusterNodeId"
          },
          "name": {
            "type": "string"
          },
          "joinedAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          },
          "uptimeSecs": {
            "type": "integer",
            "format": "uint32"
          },
          "lastHeartbeat": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          }
        },
        "required": [
          "nodeId",
          "joinedAt",
          "uptimeSecs",
          "lastHeartbeat"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.cluster.ClusterNodeId": {
        "type": "string",
        "description": "Unique ID of a cluster node."
      },
      "nexigon_api.cluster.GetClusterDetailsAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.cluster.GetClusterDetailsOutput": {
        "type": "object",
        "description": "Information about the cluster.",
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.cluster.ClusterNode"
            }
          }
        },
        "required": [
          "nodes"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.cluster.RegisterClusterNodeAction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.cluster.RegisterClusterNodeOutput": {
        "type": "object",
        "description": "Output of registering a new cluster node.",
        "properties": {
          "nodeId": {
            "$ref": "#/components/schemas/nexigon_api.cluster.ClusterNodeId"
          }
        },
        "required": [
          "nodeId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.cluster.ReportClusterNodeHeartbeatAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.datetime.Timestamp": {
        "type": "string",
        "description": "ISO 8601 formatted date and time string."
      },
      "nexigon_api.devices.AddDeviceCertificateAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "fingerprint": {
            "$ref": "#/components/schemas/nexigon_api.devices.CertificateFingerprint"
          },
          "status": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateStatus"
          }
        },
        "required": [
          "deviceId",
          "fingerprint"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.AddDeviceCertificateOutput": {
        "type": "object",
        "description": "Output of adding a device certificate.",
        "properties": {
          "certificateId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateId"
          }
        },
        "required": [
          "certificateId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.AuthenticateDeviceAction": {
        "type": "object",
        "properties": {
          "fingerprint": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceFingerprint"
          },
          "token": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentToken"
          },
          "certificate": {
            "$ref": "#/components/schemas/nexigon_api.devices.CertificateFingerprint"
          }
        },
        "required": [
          "fingerprint",
          "token",
          "certificate"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.AuthenticateDeviceOutput": {
        "type": "object",
        "description": "Output of authenticating a device.",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenId"
          },
          "fingerprintId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceFingerprintId"
          },
          "certificateId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateId"
          },
          "actor": {
            "$ref": "#/components/schemas/nexigon_api.actor.Actor"
          }
        },
        "required": [
          "deviceId",
          "tokenId",
          "fingerprintId",
          "certificateId",
          "actor"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.CertificateFingerprint": {
        "type": "string",
        "description": "Fingerprint of a device certificate."
      },
      "nexigon_api.devices.CreateDeviceAction": {
        "type": "object",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "fingerprint": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceFingerprint"
          }
        },
        "required": [
          "projectId",
          "fingerprint"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.CreateDeviceOutput": {
        "type": "object",
        "description": "Output of creating a new device.",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          }
        },
        "required": [
          "deviceId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.DeleteDeviceAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          }
        },
        "required": [
          "deviceId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.DeleteDeviceCertificateAction": {
        "type": "object",
        "properties": {
          "certificateId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateId"
          }
        },
        "required": [
          "certificateId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.DeviceCertificate": {
        "type": "object",
        "description": "Device certificate.",
        "properties": {
          "certificateId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateId"
          },
          "status": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateStatus"
          },
          "fingerprint": {
            "$ref": "#/components/schemas/nexigon_api.devices.CertificateFingerprint"
          },
          "firstSeen": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          }
        },
        "required": [
          "certificateId",
          "status",
          "fingerprint",
          "firstSeen"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.DeviceCertificateAddedEvent": {
        "type": "object",
        "description": "Device certificate has been added.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "certificateId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateId"
          },
          "status": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateStatus"
          }
        },
        "required": [
          "projectId",
          "deviceId",
          "certificateId",
          "status"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.DeviceCertificateDeletedEvent": {
        "type": "object",
        "description": "Device certificate has been deleted.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "certificateId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateId"
          }
        },
        "required": [
          "projectId",
          "deviceId",
          "certificateId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.DeviceCertificateId": {
        "type": "string",
        "description": "Unique ID of a device certificate."
      },
      "nexigon_api.devices.DeviceCertificateStatus": {
        "enum": [
          "Pending",
          "Active",
          "Rejected",
          "Revoked"
        ],
        "description": "Status of a device certificate."
      },
      "nexigon_api.devices.DeviceCertificateStatusChangedEvent": {
        "type": "object",
        "description": "Status of device certificate has been changed.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "certificateId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateId"
          },
          "status": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateStatus"
          }
        },
        "required": [
          "projectId",
          "deviceId",
          "certificateId",
          "status"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.DeviceConnection": {
        "type": "object",
        "description": "Device connection.",
        "properties": {
          "connectionId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceConnectionId"
          },
          "nodeId": {
            "$ref": "#/components/schemas/nexigon_api.cluster.ClusterNodeId"
          },
          "connectedAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          },
          "connectedForSecs": {
            "type": "integer",
            "format": "uint32"
          }
        },
        "required": [
          "connectionId",
          "nodeId",
          "connectedAt",
          "connectedForSecs"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.DeviceConnectionId": {
        "type": "string",
        "description": "Unique ID of a device connection."
      },
      "nexigon_api.devices.DeviceCreatedEvent": {
        "type": "object",
        "description": "Device has been created.",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          }
        },
        "required": [
          "deviceId",
          "projectId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.DeviceDeletedEvent": {
        "type": "object",
        "description": "Device has been deleted.",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          }
        },
        "required": [
          "deviceId",
          "projectId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.DeviceEvent": {
        "type": "object",
        "description": "Event emitted by a device.",
        "properties": {
          "eventId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceEventId"
          },
          "category": {
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceEventSeverity"
          },
          "body": {
            "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
            }
          },
          "emittedAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          },
          "receivedAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          }
        },
        "required": [
          "eventId",
          "severity",
          "body",
          "attributes",
          "emittedAt"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.DeviceEventId": {
        "type": "string",
        "description": "ID of a device event (unique per device)."
      },
      "nexigon_api.devices.DeviceEventSeverity": {
        "enum": [
          "Trace",
          "Debug",
          "Info",
          "Warning",
          "Error",
          "Critical"
        ],
        "description": "Severity of a device event."
      },
      "nexigon_api.devices.DeviceFingerprint": {
        "type": "string",
        "description": "Device fingerprint."
      },
      "nexigon_api.devices.DeviceFingerprintId": {
        "type": "string",
        "description": "Device fingerprint ID."
      },
      "nexigon_api.devices.DeviceId": {
        "type": "string",
        "description": "Unique ID of a device."
      },
      "nexigon_api.devices.DeviceProperty": {
        "type": "object",
        "description": "Device property.",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
          },
          "protected": {
            "type": "boolean"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          }
        },
        "required": [
          "name",
          "value",
          "protected",
          "lastUpdated"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.GetDeviceDetailsAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          }
        },
        "required": [
          "deviceId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.GetDeviceDetailsOutput": {
        "type": "object",
        "description": "Output of getting information about a device.",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "fingerprintId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceFingerprintId"
          },
          "name": {
            "type": "string"
          },
          "isConnected": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
            }
          },
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificate"
            }
          },
          "connections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.devices.DeviceConnection"
            }
          }
        },
        "required": [
          "deviceId",
          "projectId",
          "fingerprintId",
          "isConnected",
          "metadata",
          "certificates",
          "connections"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.GetDevicePropertyAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "deviceId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.GetDevicePropertyOutput": {
        "description": "Output of getting a property of a device.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "NotFound"
              }
            },
            "required": [
              "result"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Found"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
              },
              "protected": {
                "type": "boolean"
              },
              "lastUpdated": {
                "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
              }
            },
            "required": [
              "result",
              "name",
              "value",
              "protected",
              "lastUpdated"
            ]
          }
        ]
      },
      "nexigon_api.devices.IssueDeviceHttpProxyTokenAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "validForSecs": {
            "type": "integer",
            "format": "uint32"
          },
          "hostname": {
            "type": "string"
          },
          "port": {},
          "redirect": {
            "type": "string"
          }
        },
        "required": [
          "deviceId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.IssueDeviceHttpProxyTokenOutput": {
        "type": "object",
        "description": "Output of issuing a HTTP proxy JWT.",
        "properties": {
          "jwt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "jwt",
          "url"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.IssueDeviceTokenAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "validForSecs": {
            "type": "integer",
            "format": "uint32"
          },
          "claims": {
            "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
          }
        },
        "required": [
          "deviceId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.IssueDeviceTokenOutput": {
        "type": "object",
        "description": "Output of issuing a JWT for a device.",
        "properties": {
          "jwt": {
            "type": "string"
          }
        },
        "required": [
          "jwt"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.PublishDeviceEventsAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.devices.DeviceEvent"
            }
          }
        },
        "required": [
          "deviceId",
          "events"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.QueryDeviceEventsAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "limit": {
            "type": "integer",
            "format": "uint32"
          }
        },
        "required": [
          "deviceId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.QueryDeviceEventsOutput": {
        "type": "object",
        "description": "Output of querying device events.",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.devices.DeviceEvent"
            }
          }
        },
        "required": [
          "events"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.QueryDevicePropertiesAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          }
        },
        "required": [
          "deviceId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.QueryDevicePropertiesOutput": {
        "type": "object",
        "description": "Output of querying the properties of a device.",
        "properties": {
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/nexigon_api.devices.DeviceProperty"
            }
          }
        },
        "required": [
          "properties"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.QueryDevicesAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.QueryDevicesItem": {
        "type": "object",
        "description": "Device item.",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          }
        },
        "required": [
          "deviceId",
          "projectId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.QueryDevicesOutput": {
        "type": "object",
        "description": "Output of querying the devices of the instance.",
        "properties": {
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.devices.QueryDevicesItem"
            }
          }
        },
        "required": [
          "devices"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.RegisterDeviceConnectionAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "nodeId": {
            "$ref": "#/components/schemas/nexigon_api.cluster.ClusterNodeId"
          }
        },
        "required": [
          "deviceId",
          "nodeId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.RegisterDeviceConnectionOutput": {
        "type": "object",
        "description": "Output of registering a connection of a device to a cluster node.",
        "properties": {
          "connectionId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceConnectionId"
          }
        },
        "required": [
          "connectionId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.SetDeviceCertificateStatusAction": {
        "type": "object",
        "properties": {
          "certificateId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateId"
          },
          "status": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceCertificateStatus"
          }
        },
        "required": [
          "certificateId",
          "status"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.SetDeviceMetadataAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
            }
          }
        },
        "required": [
          "deviceId",
          "metadata"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.SetDeviceNameAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "deviceId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.SetDevicePropertyAction": {
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
          },
          "protected": {
            "type": "boolean"
          }
        },
        "required": [
          "deviceId",
          "name",
          "value"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.UnregisterDeviceConnectionAction": {
        "type": "object",
        "properties": {
          "connectionId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceConnectionId"
          }
        },
        "required": [
          "connectionId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.ValidateDeviceHttpProxyTokenAction": {
        "type": "object",
        "properties": {
          "jwt": {
            "type": "string"
          }
        },
        "required": [
          "jwt"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.ValidateDeviceHttpProxyTokenInvalid": {
        "type": "object",
        "description": "Validation of a HTTP proxy JWT failed.",
        "properties": {
          "redirect": {
            "type": "string"
          }
        },
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.ValidateDeviceHttpProxyTokenOutput": {
        "description": "Output of validating a HTTP proxy JWT.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Invalid"
              },
              "redirect": {
                "type": "string"
              }
            },
            "required": [
              "result"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Valid"
              },
              "deviceId": {
                "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
              },
              "hostname": {
                "type": "string"
              },
              "port": {}
            },
            "required": [
              "result",
              "deviceId"
            ]
          }
        ]
      },
      "nexigon_api.devices.ValidateDeviceHttpProxyTokenSuccess": {
        "type": "object",
        "description": "Successful validation of a HTTP proxy JWT.",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "hostname": {
            "type": "string"
          },
          "port": {}
        },
        "required": [
          "deviceId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.ValidateDeviceTokenAction": {
        "type": "object",
        "properties": {
          "jwt": {
            "type": "string"
          }
        },
        "required": [
          "jwt"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.devices.ValidateDeviceTokenOutput": {
        "description": "Output of validating a device JWT.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Invalid"
              }
            },
            "required": [
              "result"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Valid"
              },
              "deviceId": {
                "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
              },
              "claims": {
                "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
              }
            },
            "required": [
              "result",
              "deviceId",
              "claims"
            ]
          }
        ]
      },
      "nexigon_api.devices.ValidateDeviceTokenSuccess": {
        "type": "object",
        "description": "Successful validation of a device JWT.",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "claims": {
            "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
          }
        },
        "required": [
          "deviceId",
          "claims"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.digest.Digest": {
        "type": "string",
        "description": "A hash digest."
      },
      "nexigon_api.errors.ActionError": {
        "type": "object",
        "description": "Action error.",
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/nexigon_api.errors.ActionErrorKind"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "kind",
          "message"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.errors.ActionErrorKind": {
        "enum": [
          "Invalid",
          "Forbidden",
          "Internal"
        ],
        "description": "Kind of an action error."
      },
      "nexigon_api.errors.ActionResult--": {
        "description": "Action result.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Ok"
              },
              "value": {}
            }
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Error"
              },
              "kind": {
                "$ref": "#/components/schemas/nexigon_api.errors.ActionErrorKind"
              },
              "message": {
                "type": "string"
              }
            },
            "required": [
              "result",
              "kind",
              "message"
            ]
          }
        ]
      },
      "nexigon_api.instance.GetInstanceSettingsRawAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.instance.GetInstanceSettingsRawOutput": {
        "type": "object",
        "description": "Settings of the instance.",
        "properties": {
          "settings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
            }
          }
        },
        "required": [
          "settings"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.instance.GetInstanceStatisticsAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.instance.GetInstanceStatisticsOutput": {
        "type": "object",
        "description": "Instance statistics.",
        "properties": {
          "users": {
            "type": "integer",
            "format": "uint32"
          },
          "projects": {
            "type": "integer",
            "format": "uint32"
          },
          "devices": {
            "type": "integer",
            "format": "uint32"
          }
        },
        "required": [
          "users",
          "projects",
          "devices"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.instance.SetInstanceSettingRawAction": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/nexigon_api.json.JsonValue"
          }
        },
        "required": [
          "key",
          "value"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.jobs.Job": {
        "type": "object",
        "description": "Job.",
        "properties": {
          "jobId": {
            "$ref": "#/components/schemas/nexigon_api.jobs.JobId"
          },
          "status": {
            "$ref": "#/components/schemas/nexigon_api.jobs.JobStatus"
          },
          "job": {
            "type": "string"
          },
          "queued": {
            "type": "boolean"
          },
          "attempts": {
            "type": "integer",
            "format": "uint32"
          },
          "retryLimit": {
            "type": "integer",
            "format": "uint32"
          },
          "retryDelay": {
            "type": "integer",
            "format": "uint32"
          },
          "timeout": {
            "type": "integer",
            "format": "uint32"
          },
          "createdAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          },
          "finishedAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          }
        },
        "required": [
          "jobId",
          "status",
          "job",
          "queued",
          "attempts",
          "retryDelay",
          "timeout",
          "createdAt"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.jobs.JobId": {
        "type": "string",
        "description": "Unique ID of a job."
      },
      "nexigon_api.jobs.JobStatus": {
        "enum": [
          "Pending",
          "Completed",
          "Failed",
          "Expired",
          "Cancelled"
        ],
        "description": "Execution status of a job."
      },
      "nexigon_api.jobs.QueryJobsAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.jobs.QueryJobsOutput": {
        "type": "object",
        "description": "Output of querying the jobs of the instance.",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.jobs.Job"
            }
          }
        },
        "required": [
          "jobs"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.json.JsonValue": {
        "description": "JSON value."
      },
      "nexigon_api.organizations.AddOrganizationMemberAction": {
        "type": "object",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          },
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "isAdmin": {
            "type": "boolean"
          }
        },
        "required": [
          "organizationId",
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.CreateOrganizationAction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "admins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.users.UserId"
            }
          }
        },
        "required": [
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.CreateOrganizationOutput": {
        "type": "object",
        "description": "Output of creating an organization.",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          }
        },
        "required": [
          "organizationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.DeleteOrganizationAction": {
        "type": "object",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          }
        },
        "required": [
          "organizationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.DeleteOrganizationInvitationAction": {
        "type": "object",
        "properties": {
          "invitationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationInvitationId"
          }
        },
        "required": [
          "invitationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.InviteOrganizationMemberAction": {
        "type": "object",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "organizationId",
          "email"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.InviteOrganizationMemberOutput": {
        "type": "object",
        "description": "Output of inviting a user to an organization.",
        "properties": {
          "invitationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationInvitationId"
          }
        },
        "required": [
          "invitationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.OrganizationCreatedEvent": {
        "type": "object",
        "description": "Event indicating the creation of an organization.",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          }
        },
        "required": [
          "organizationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.OrganizationDeletedEvent": {
        "type": "object",
        "description": "Event indicating the deletion of an organization.",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          }
        },
        "required": [
          "organizationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.OrganizationId": {
        "type": "string",
        "description": "Unique ID of an organization"
      },
      "nexigon_api.organizations.OrganizationInvitationCreatedEvent": {
        "type": "object",
        "description": "Event indicating that a member has been invited to an organization.",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          },
          "invitationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationInvitationId"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "organizationId",
          "invitationId",
          "email"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.OrganizationInvitationId": {
        "type": "string",
        "description": "Unique ID of an invitation to an organization."
      },
      "nexigon_api.organizations.OrganizationMemberAddedEvent": {
        "type": "object",
        "description": "Event indicating that a member has been added to an organization.",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          },
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "isAdmin": {
            "type": "boolean"
          }
        },
        "required": [
          "organizationId",
          "userId",
          "isAdmin"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.OrganizationMemberRemovedEvent": {
        "type": "object",
        "description": "Event indicating that a member has been removed from an organization.",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          },
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "organizationId",
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationInvitationsAction": {
        "type": "object",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          }
        },
        "required": [
          "organizationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationInvitationsItem": {
        "type": "object",
        "description": "Organization invitation item.",
        "properties": {
          "invitationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationInvitationId"
          },
          "email": {
            "type": "string"
          },
          "invitingUserId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "invitationId",
          "email"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationInvitationsOutput": {
        "type": "object",
        "description": "Output of querying the invitations of an organization.",
        "properties": {
          "invitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationInvitationsItem"
            }
          }
        },
        "required": [
          "invitations"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationMembersAction": {
        "type": "object",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          }
        },
        "required": [
          "organizationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationMembersItem": {
        "type": "object",
        "description": "Member item.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          }
        },
        "required": [
          "userId",
          "email",
          "isAdmin"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationMembersOutput": {
        "type": "object",
        "description": "Output of querying the members of an organization.",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationMembersItem"
            }
          }
        },
        "required": [
          "members"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationProjectsAction": {
        "type": "object",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          }
        },
        "required": [
          "organizationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationProjectsItem": {
        "type": "object",
        "description": "Project item.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "projectId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationProjectsOutput": {
        "type": "object",
        "description": "Output of querying the projects of an organization.",
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationProjectsItem"
            }
          }
        },
        "required": [
          "projects"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationRepositoriesAction": {
        "type": "object",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          }
        },
        "required": [
          "organizationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationRepositoriesItem": {
        "type": "object",
        "description": "Repository item.",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "repositoryId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationRepositoriesOutput": {
        "type": "object",
        "description": "Output of querying the repositories of an organization.",
        "properties": {
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationRepositoriesItem"
            }
          }
        },
        "required": [
          "repositories"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationsAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationsItem": {
        "type": "object",
        "description": "Organization item.",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "organizationId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.QueryOrganizationsOutput": {
        "type": "object",
        "description": "Output of querying the organizations of the instance.",
        "properties": {
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.organizations.QueryOrganizationsItem"
            }
          }
        },
        "required": [
          "organizations"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.organizations.RemoveOrganizationMemberAction": {
        "type": "object",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          },
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "organizationId",
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.outputs.Empty": {
        "type": "object",
        "description": "Empty output.",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.AddProjectRepositoryAction": {
        "type": "object",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          }
        },
        "required": [
          "projectId",
          "repositoryId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.CreateDeploymentTokenAction": {
        "type": "object",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "name": {
            "type": "string"
          },
          "flags": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenFlags"
          }
        },
        "required": [
          "projectId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.CreateDeploymentTokenOutput": {
        "type": "object",
        "description": "Output of creating a deployment token.",
        "properties": {
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenId"
          },
          "token": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentToken"
          }
        },
        "required": [
          "tokenId",
          "token"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.CreateProjectAction": {
        "type": "object",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "organizationId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.CreateProjectOutput": {
        "description": "Output of creating a project.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Created"
              },
              "projectId": {
                "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
              }
            },
            "required": [
              "result",
              "projectId"
            ]
          }
        ]
      },
      "nexigon_api.projects.CreateProjectSuccess": {
        "type": "object",
        "description": "Project creation has been successful.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          }
        },
        "required": [
          "projectId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.DeleteDeploymentTokenAction": {
        "type": "object",
        "properties": {
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenId"
          }
        },
        "required": [
          "tokenId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.DeleteProjectAction": {
        "type": "object",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          }
        },
        "required": [
          "projectId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.DeploymentToken": {
        "type": "string",
        "description": "Deployment token."
      },
      "nexigon_api.projects.DeploymentTokenCreatedEvent": {
        "type": "object",
        "description": "Event indicating that a deployment token has been created.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenId"
          },
          "flags": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenFlags"
          }
        },
        "required": [
          "projectId",
          "tokenId",
          "flags"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.DeploymentTokenDeletedEvent": {
        "type": "object",
        "description": "Event indicating that a deployment token has been deleted.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenId"
          }
        },
        "required": [
          "projectId",
          "tokenId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.DeploymentTokenFlags": {
        "type": "object",
        "description": "Flags for deployment tokens.",
        "properties": {
          "autoAccept": {
            "type": "boolean"
          }
        },
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.DeploymentTokenFlagsChangedEvent": {
        "type": "object",
        "description": "Event indicating that deployment token flags have been changed.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenId"
          },
          "flags": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenFlags"
          }
        },
        "required": [
          "projectId",
          "tokenId",
          "flags"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.DeploymentTokenId": {
        "type": "string",
        "description": "Unique ID of a deployment token."
      },
      "nexigon_api.projects.GetProjectDetailsAction": {
        "type": "object",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          }
        },
        "required": [
          "projectId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.GetProjectDetailsOutput": {
        "type": "object",
        "description": "Information about a project.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "name": {
            "type": "string"
          },
          "deviceCount": {
            "type": "integer",
            "format": "uint32"
          }
        },
        "required": [
          "projectId",
          "name",
          "deviceCount"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.ProjectCreatedEvent": {
        "type": "object",
        "description": "Event indicating the creation of a project.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          }
        },
        "required": [
          "projectId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.ProjectDeletedEvent": {
        "type": "object",
        "description": "Event indicating the deletion of a project.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          }
        },
        "required": [
          "projectId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.ProjectId": {
        "type": "string",
        "description": "Unique ID of a project."
      },
      "nexigon_api.projects.ProjectRepositoryAddedEvent": {
        "type": "object",
        "description": "Event indicating that a repository has been added to a project.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          }
        },
        "required": [
          "projectId",
          "repositoryId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.ProjectRepositoryRemovedEvent": {
        "type": "object",
        "description": "Event indicating that a repository has been removed from a project.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          }
        },
        "required": [
          "projectId",
          "repositoryId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryAuditLogEventsAction": {
        "type": "object",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          }
        },
        "required": [
          "projectId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryAuditLogEventsOutput": {
        "type": "object",
        "description": "Output of querying the audit log of the project.",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.audit.AuditLogEvent"
            }
          }
        },
        "required": [
          "events"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryProjectDeploymentTokensAction": {
        "type": "object",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          }
        },
        "required": [
          "projectId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryProjectDeploymentTokensItem": {
        "type": "object",
        "description": "Deployment token item.",
        "properties": {
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenId"
          },
          "createdAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          },
          "name": {
            "type": "string"
          },
          "flags": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenFlags"
          }
        },
        "required": [
          "tokenId",
          "createdAt",
          "flags"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryProjectDeploymentTokensOutput": {
        "type": "object",
        "description": "Output of querying the deployment tokens of a project.",
        "properties": {
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.projects.QueryProjectDeploymentTokensItem"
            }
          }
        },
        "required": [
          "tokens"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryProjectDevicesAction": {
        "type": "object",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          }
        },
        "required": [
          "projectId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryProjectDevicesItem": {
        "type": "object",
        "description": "Device item.",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          },
          "name": {
            "type": "string"
          },
          "firstSeen": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          },
          "isConnected": {
            "type": "boolean"
          },
          "pendingCertificatesCount": {
            "type": "integer",
            "format": "uint32"
          }
        },
        "required": [
          "deviceId",
          "firstSeen",
          "isConnected",
          "pendingCertificatesCount"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryProjectDevicesOutput": {
        "type": "object",
        "description": "Output of querying the devices of a project.",
        "properties": {
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.projects.QueryProjectDevicesItem"
            }
          }
        },
        "required": [
          "devices"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryProjectRepositoriesAction": {
        "type": "object",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          }
        },
        "required": [
          "projectId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryProjectRepositoriesItem": {
        "type": "object",
        "description": "Repository item.",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "repositoryId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryProjectRepositoriesOutput": {
        "type": "object",
        "description": "Output of querying the repositories of a project.",
        "properties": {
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.projects.QueryProjectRepositoriesItem"
            }
          }
        },
        "required": [
          "repositories"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryProjectsAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryProjectsItem": {
        "type": "object",
        "description": "Project item.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "projectId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.QueryProjectsOutput": {
        "type": "object",
        "description": "Output of querying the projects of the instance.",
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.projects.QueryProjectsItem"
            }
          }
        },
        "required": [
          "projects"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.RemoveProjectRepositoryAction": {
        "type": "object",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          }
        },
        "required": [
          "projectId",
          "repositoryId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.SetDeploymentTokenFlagsAction": {
        "type": "object",
        "properties": {
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenId"
          },
          "flags": {
            "$ref": "#/components/schemas/nexigon_api.projects.DeploymentTokenFlags"
          }
        },
        "required": [
          "tokenId",
          "flags"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.projects.SetProjectOrganizationAction": {
        "type": "object",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          }
        },
        "required": [
          "projectId",
          "organizationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.properties.DiskInfo": {
        "type": "object",
        "description": "Disk information.",
        "properties": {
          "name": {
            "type": "string"
          },
          "filesystem": {
            "type": "string"
          },
          "mountPoint": {
            "type": "string"
          },
          "totalSpace": {
            "type": "integer",
            "format": "uint64"
          },
          "availableSpace": {
            "type": "integer",
            "format": "uint64"
          }
        },
        "required": [
          "name",
          "filesystem",
          "mountPoint",
          "totalSpace",
          "availableSpace"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.properties.MemoryInfo": {
        "type": "object",
        "description": "Memory information.",
        "properties": {
          "total": {
            "type": "integer",
            "format": "uint64"
          }
        },
        "required": [
          "total"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.properties.NetworkInterfaceInfo": {
        "type": "object",
        "description": "Network interface information.",
        "properties": {
          "name": {
            "type": "string"
          },
          "macAddress": {
            "type": "string"
          },
          "ipAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "macAddress",
          "ipAddresses"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.properties.SystemInfo": {
        "type": "object",
        "description": "System information.",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "kernel": {
            "type": "string"
          },
          "hostname": {
            "type": "string"
          },
          "arch": {
            "type": "string"
          },
          "memory": {
            "$ref": "#/components/schemas/nexigon_api.properties.MemoryInfo"
          },
          "networks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.properties.NetworkInterfaceInfo"
            }
          },
          "disks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.properties.DiskInfo"
            }
          }
        },
        "required": [
          "memory",
          "networks",
          "disks"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.AddPackageVersionAssetAction": {
        "type": "object",
        "properties": {
          "versionId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
          },
          "assetId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetId"
          },
          "filename": {
            "type": "string"
          }
        },
        "required": [
          "versionId",
          "assetId",
          "filename"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.AddPackageVersionAssetOutput": {
        "enum": [
          {
            "result": "FilenameAlreadyExists"
          },
          {
            "result": "Added"
          }
        ],
        "description": "Output of adding an asset to a package version."
      },
      "nexigon_api.repositories.AddTagItem": {
        "type": "object",
        "description": "Add tag item.",
        "properties": {
          "tag": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "reassign": {
            "type": "boolean"
          }
        },
        "required": [
          "tag"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.CreateAssetAction": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          },
          "size": {
            "type": "integer",
            "format": "uint64"
          },
          "digest": {
            "$ref": "#/components/schemas/nexigon_api.digest.Digest"
          }
        },
        "required": [
          "repositoryId",
          "size",
          "digest"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.CreateAssetOutput": {
        "description": "Output of creating an asset.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "AssetAlreadyExists"
              },
              "assetId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetId"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Created"
              },
              "assetId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetId"
              }
            }
          }
        ]
      },
      "nexigon_api.repositories.CreatePackageAction": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "repositoryId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.CreatePackageOutput": {
        "description": "Output of creating a package.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "NameAlreadyExists"
              }
            },
            "required": [
              "result"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Created"
              },
              "packageId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
              }
            },
            "required": [
              "result",
              "packageId"
            ]
          }
        ]
      },
      "nexigon_api.repositories.CreatePackageSuccess": {
        "type": "object",
        "description": "Successfully created a package.",
        "properties": {
          "packageId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
          }
        },
        "required": [
          "packageId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.CreatePackageVersionAction": {
        "type": "object",
        "properties": {
          "packageId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.repositories.AddTagItem"
            }
          }
        },
        "required": [
          "packageId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.CreatePackageVersionOutput": {
        "description": "Output of creating a package version.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Created"
              },
              "versionId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
              }
            },
            "required": [
              "result",
              "versionId"
            ]
          }
        ]
      },
      "nexigon_api.repositories.CreatePackageVersionSuccess": {
        "type": "object",
        "description": "Package version creation has been successful.",
        "properties": {
          "versionId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
          }
        },
        "required": [
          "versionId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.CreateRepositoryAction": {
        "type": "object",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          },
          "name": {
            "type": "string"
          },
          "visibility": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryVisibility"
          }
        },
        "required": [
          "organizationId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.CreateRepositoryOutput": {
        "description": "Output of creating a repository.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "NameAlreadyExists"
              }
            },
            "required": [
              "result"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Created"
              },
              "repositoryId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
              }
            },
            "required": [
              "result",
              "repositoryId"
            ]
          }
        ]
      },
      "nexigon_api.repositories.CreateRepositorySuccess": {
        "type": "object",
        "description": "Successfully created a repository.",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          }
        },
        "required": [
          "repositoryId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.DeleteAssetAction": {
        "type": "object",
        "properties": {
          "assetId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetId"
          }
        },
        "required": [
          "assetId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.DeletePackageAction": {
        "type": "object",
        "properties": {
          "packageId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
          }
        },
        "required": [
          "packageId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.DeletePackageVersionAction": {
        "type": "object",
        "properties": {
          "versionId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
          }
        },
        "required": [
          "versionId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.DeleteRepositoryAction": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          }
        },
        "required": [
          "repositoryId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.GetAssetDetailsAction": {
        "type": "object",
        "properties": {
          "assetId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetId"
          }
        },
        "required": [
          "assetId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.GetAssetDetailsOutput": {
        "type": "object",
        "description": "Output of getting information about an asset.",
        "properties": {
          "assetId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetId"
          },
          "size": {
            "type": "integer",
            "format": "uint64"
          },
          "digest": {
            "$ref": "#/components/schemas/nexigon_api.digest.Digest"
          },
          "status": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetStatus"
          },
          "referenceCount": {
            "type": "integer",
            "format": "uint64"
          }
        },
        "required": [
          "assetId",
          "size",
          "digest",
          "status",
          "referenceCount"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.GetPackageDetailsAction": {
        "type": "object",
        "properties": {
          "packageId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
          }
        },
        "required": [
          "packageId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.GetPackageDetailsOutput": {
        "type": "object",
        "description": "Output of getting information about a package.",
        "properties": {
          "packageId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
          },
          "name": {
            "type": "string"
          },
          "versionCount": {
            "type": "integer",
            "format": "uint64"
          }
        },
        "required": [
          "packageId",
          "name",
          "versionCount"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.GetPackageVersionDetailsAction": {
        "type": "object",
        "properties": {
          "versionId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
          }
        },
        "required": [
          "versionId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.GetPackageVersionDetailsOutput": {
        "type": "object",
        "description": "Output of getting information about a package version.",
        "properties": {
          "versionId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
          },
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          },
          "packageId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionAsset"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionTag"
            }
          }
        },
        "required": [
          "versionId",
          "repositoryId",
          "packageId",
          "assets",
          "tags"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.GetRepositoryDetailsAction": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          }
        },
        "required": [
          "repositoryId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.GetRepositoryDetailsOutput": {
        "type": "object",
        "description": "Output of getting information about a repository.",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          },
          "name": {
            "type": "string"
          },
          "visibility": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryVisibility"
          },
          "packageCount": {
            "type": "integer",
            "format": "uint64"
          },
          "assetCount": {
            "type": "integer",
            "format": "uint64"
          }
        },
        "required": [
          "repositoryId",
          "name",
          "visibility",
          "packageCount",
          "assetCount"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.GetRepositoryS3ConfigAction": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          }
        },
        "required": [
          "repositoryId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.GetRepositoryS3ConfigOutput": {
        "type": "object",
        "description": "Output of getting the S3 configuration for the repository.\n\nThis intentionally does not include the secret access key.",
        "properties": {
          "s3Endpoint": {
            "type": "string"
          },
          "s3Bucket": {
            "type": "string"
          },
          "s3Region": {
            "type": "string"
          },
          "s3Prefix": {
            "type": "string"
          },
          "s3AccessKeyId": {
            "type": "string"
          }
        },
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.IssueAssetDownloadUrlAction": {
        "type": "object",
        "properties": {
          "assetId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetId"
          },
          "filename": {
            "type": "string"
          }
        },
        "required": [
          "assetId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.IssueAssetDownloadUrlOutput": {
        "type": "object",
        "description": "Output of issuing a URL for downloading an asset.",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.IssueAssetUploadUrlAction": {
        "type": "object",
        "properties": {
          "assetId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetId"
          }
        },
        "required": [
          "assetId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.IssueAssetUploadUrlOutput": {
        "type": "object",
        "description": "Output of issuing a URL for uploading an asset.",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.PackageId": {
        "type": "string",
        "description": "Unique ID of a package."
      },
      "nexigon_api.repositories.PackageVersionAsset": {
        "type": "object",
        "description": "Package version asset.",
        "properties": {
          "filename": {
            "type": "string"
          },
          "assetId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetId"
          },
          "size": {
            "type": "integer",
            "format": "uint64"
          },
          "digest": {
            "$ref": "#/components/schemas/nexigon_api.digest.Digest"
          },
          "status": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetStatus"
          }
        },
        "required": [
          "filename",
          "assetId",
          "size",
          "digest",
          "status"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.PackageVersionId": {
        "type": "string",
        "description": "Unique ID of a package version."
      },
      "nexigon_api.repositories.PackageVersionTag": {
        "type": "object",
        "description": "Package version tag.",
        "properties": {
          "tag": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          }
        },
        "required": [
          "tag",
          "locked"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryAuditLogEventsAction": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          }
        },
        "required": [
          "repositoryId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryAuditLogEventsOutput": {
        "type": "object",
        "description": "Output of querying the audit log of the repository.",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.audit.AuditLogEvent"
            }
          }
        },
        "required": [
          "events"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryPackageVersionsAction": {
        "type": "object",
        "properties": {
          "packageId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
          }
        },
        "required": [
          "packageId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryPackageVersionsItem": {
        "type": "object",
        "description": "Package version query item.",
        "properties": {
          "versionId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
          },
          "createdAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionTag"
            }
          }
        },
        "required": [
          "versionId",
          "createdAt",
          "tags"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryPackageVersionsOutput": {
        "type": "object",
        "description": "Output of querying the versions of a package.",
        "properties": {
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.repositories.QueryPackageVersionsItem"
            }
          }
        },
        "required": [
          "versions"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryRepositoryAssetsAction": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          }
        },
        "required": [
          "repositoryId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryRepositoryAssetsItem": {
        "type": "object",
        "description": "Asset query item.",
        "properties": {
          "assetId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetId"
          },
          "size": {
            "type": "integer",
            "format": "uint64"
          },
          "digest": {
            "$ref": "#/components/schemas/nexigon_api.digest.Digest"
          }
        },
        "required": [
          "assetId",
          "size",
          "digest"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryRepositoryAssetsOutput": {
        "type": "object",
        "description": "Output of querying the assets of a repository.",
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.repositories.QueryRepositoryAssetsItem"
            }
          }
        },
        "required": [
          "assets"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryRepositoryPackagesAction": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          }
        },
        "required": [
          "repositoryId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryRepositoryPackagesItem": {
        "type": "object",
        "description": "Package query item.",
        "properties": {
          "packageId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          }
        },
        "required": [
          "packageId",
          "name",
          "createdAt"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryRepositoryPackagesOutput": {
        "type": "object",
        "description": "Output of querying the packages of a repository.",
        "properties": {
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.repositories.QueryRepositoryPackagesItem"
            }
          }
        },
        "required": [
          "packages"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryRepositoryProjectsAction": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          }
        },
        "required": [
          "repositoryId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryRepositoryProjectsItem": {
        "type": "object",
        "description": "Project item.",
        "properties": {
          "projectId": {
            "$ref": "#/components/schemas/nexigon_api.projects.ProjectId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "projectId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.QueryRepositoryProjectsOutput": {
        "type": "object",
        "description": "Output of querying the projects of a repository.",
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.repositories.QueryRepositoryProjectsItem"
            }
          }
        },
        "required": [
          "projects"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.RemovePackageVersionAssetAction": {
        "type": "object",
        "properties": {
          "versionId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
          },
          "filename": {
            "type": "string"
          }
        },
        "required": [
          "versionId",
          "filename"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.RemoveTagItem": {
        "type": "object",
        "description": "Remove tag item.",
        "properties": {
          "tag": {
            "type": "string"
          }
        },
        "required": [
          "tag"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.RepositoryAssetId": {
        "type": "string",
        "description": "Unique ID of a repository asset."
      },
      "nexigon_api.repositories.RepositoryAssetStatus": {
        "enum": [
          "Dangling",
          "Available",
          "Deleting"
        ],
        "description": "Asset status."
      },
      "nexigon_api.repositories.RepositoryId": {
        "type": "string",
        "description": "Unique ID of a repository."
      },
      "nexigon_api.repositories.RepositoryVisibility": {
        "enum": [
          "Public",
          "Private"
        ],
        "description": "Repository visibility."
      },
      "nexigon_api.repositories.ResolvePackageByPathAction": {
        "type": "object",
        "properties": {
          "repository": {
            "type": "string"
          },
          "package": {
            "type": "string"
          }
        },
        "required": [
          "repository",
          "package"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.ResolvePackageByPathOutput": {
        "description": "Output of resolving a package by its path.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Found"
              },
              "repositoryId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
              },
              "packageId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
              }
            },
            "required": [
              "result",
              "repositoryId",
              "packageId"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "NotFound"
              }
            },
            "required": [
              "result"
            ]
          }
        ]
      },
      "nexigon_api.repositories.ResolvePackageByPathSuccess": {
        "type": "object",
        "description": "Successfully resolved package by path.",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          },
          "packageId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
          }
        },
        "required": [
          "repositoryId",
          "packageId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.ResolvePackageVersionAssetByPathAction": {
        "type": "object",
        "properties": {
          "repository": {
            "type": "string"
          },
          "package": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          }
        },
        "required": [
          "repository",
          "package",
          "tag",
          "filename"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.ResolvePackageVersionAssetByPathOutput": {
        "description": "Output of resolving a version asset by its path.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Found"
              },
              "repositoryId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
              },
              "packageId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
              },
              "versionId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
              },
              "assetId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetId"
              }
            },
            "required": [
              "result",
              "repositoryId",
              "packageId",
              "versionId",
              "assetId"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "NotFound"
              }
            },
            "required": [
              "result"
            ]
          }
        ]
      },
      "nexigon_api.repositories.ResolvePackageVersionAssetByPathSuccess": {
        "type": "object",
        "description": "Successfully resolved version asset by path.",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          },
          "packageId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
          },
          "versionId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
          },
          "assetId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryAssetId"
          }
        },
        "required": [
          "repositoryId",
          "packageId",
          "versionId",
          "assetId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.ResolvePackageVersionByPathAction": {
        "type": "object",
        "properties": {
          "repository": {
            "type": "string"
          },
          "package": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        },
        "required": [
          "repository",
          "package",
          "tag"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.ResolvePackageVersionByPathOutput": {
        "description": "Output of resolving a package version by its path.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Found"
              },
              "repositoryId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
              },
              "packageId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
              },
              "versionId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
              }
            },
            "required": [
              "result",
              "repositoryId",
              "packageId",
              "versionId"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "NotFound"
              }
            },
            "required": [
              "result"
            ]
          }
        ]
      },
      "nexigon_api.repositories.ResolvePackageVersionByPathSuccess": {
        "type": "object",
        "description": "Successfully resolved package version by path.",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          },
          "packageId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageId"
          },
          "versionId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
          }
        },
        "required": [
          "repositoryId",
          "packageId",
          "versionId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.ResolveRepositoryNameAction": {
        "type": "object",
        "properties": {
          "repository": {
            "type": "string"
          }
        },
        "required": [
          "repository"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.ResolveRepositoryNameOutput": {
        "description": "Output of resolving a repository by its name.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Found"
              },
              "repositoryId": {
                "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "NotFound"
              }
            },
            "required": [
              "result"
            ]
          }
        ]
      },
      "nexigon_api.repositories.SetRepositoryOrganizationAction": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          },
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          }
        },
        "required": [
          "repositoryId",
          "organizationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.SetRepositoryS3ConfigAction": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          },
          "s3Endpoint": {
            "type": "string"
          },
          "s3Bucket": {
            "type": "string"
          },
          "s3Region": {
            "type": "string"
          },
          "s3Prefix": {
            "type": "string"
          },
          "s3AccessKeyId": {
            "type": "string"
          },
          "s3SecretAccessKey": {
            "type": "string"
          }
        },
        "required": [
          "repositoryId",
          "s3Endpoint",
          "s3Bucket",
          "s3AccessKeyId",
          "s3SecretAccessKey"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.SetRepositoryVisibilityAction": {
        "type": "object",
        "properties": {
          "repositoryId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryId"
          },
          "visibility": {
            "$ref": "#/components/schemas/nexigon_api.repositories.RepositoryVisibility"
          }
        },
        "required": [
          "repositoryId",
          "visibility"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.TagPackageVersionAction": {
        "type": "object",
        "properties": {
          "versionId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.repositories.AddTagItem"
            }
          }
        },
        "required": [
          "versionId",
          "tags"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.repositories.UntagPackageVersionAction": {
        "type": "object",
        "properties": {
          "versionId": {
            "$ref": "#/components/schemas/nexigon_api.repositories.PackageVersionId"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.repositories.RemoveTagItem"
            }
          }
        },
        "required": [
          "versionId",
          "tags"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.AcceptOrganizationInvitationAction": {
        "type": "object",
        "properties": {
          "invitationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationInvitationId"
          }
        },
        "required": [
          "invitationId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.AuthenticateWithSessionTokenAction": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/nexigon_api.users.UserSessionToken"
          }
        },
        "required": [
          "token"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.AuthenticateWithSessionTokenOutput": {
        "description": "Output of authenticating a user with a session token.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Invalid"
              }
            },
            "required": [
              "result"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Authenticated"
              },
              "userId": {
                "$ref": "#/components/schemas/nexigon_api.users.UserId"
              },
              "sessionId": {
                "$ref": "#/components/schemas/nexigon_api.users.UserSessionId"
              },
              "actor": {
                "$ref": "#/components/schemas/nexigon_api.actor.Actor"
              }
            },
            "required": [
              "result",
              "userId",
              "sessionId",
              "actor"
            ]
          }
        ]
      },
      "nexigon_api.users.AuthenticateWithSessionTokenSuccess": {
        "type": "object",
        "description": "Authentication with session token has been successful.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "sessionId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserSessionId"
          },
          "actor": {
            "$ref": "#/components/schemas/nexigon_api.actor.Actor"
          }
        },
        "required": [
          "userId",
          "sessionId",
          "actor"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.AuthenticateWithUserTokenAction": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/nexigon_api.users.UserToken"
          }
        },
        "required": [
          "token"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.AuthenticateWithUserTokenOutput": {
        "description": "Output of authenticating a user with a token.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Invalid"
              }
            },
            "required": [
              "result"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Authenticated"
              },
              "userId": {
                "$ref": "#/components/schemas/nexigon_api.users.UserId"
              },
              "actor": {
                "$ref": "#/components/schemas/nexigon_api.actor.Actor"
              }
            },
            "required": [
              "result",
              "userId",
              "actor"
            ]
          }
        ]
      },
      "nexigon_api.users.AuthenticateWithUserTokenSuccess": {
        "type": "object",
        "description": "Authentication with user token has been successful.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "actor": {
            "$ref": "#/components/schemas/nexigon_api.actor.Actor"
          }
        },
        "required": [
          "userId",
          "actor"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.CleanupExpiredUserSessionsAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.CompleteRegistrationAction": {
        "type": "object",
        "properties": {
          "activationToken": {
            "type": "string"
          }
        },
        "required": [
          "activationToken"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.CompleteRegistrationOutput": {
        "enum": [
          {
            "result": "Completed"
          },
          {
            "result": "Failed"
          }
        ],
        "description": "Output of completing the registration of a user."
      },
      "nexigon_api.users.CreateUserAction": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          }
        },
        "required": [
          "email"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.CreateUserOutput": {
        "description": "Output of creating a user.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Created"
              },
              "userId": {
                "$ref": "#/components/schemas/nexigon_api.users.UserId"
              }
            },
            "required": [
              "result",
              "userId"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "EmailAlreadyExists"
              }
            },
            "required": [
              "result"
            ]
          }
        ]
      },
      "nexigon_api.users.CreateUserSuccess": {
        "type": "object",
        "description": "User was created successfully.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.CreateUserTokenAction": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.CreateUserTokenOutput": {
        "type": "object",
        "description": "Output of creating a user token.",
        "properties": {
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserTokenId"
          },
          "token": {
            "$ref": "#/components/schemas/nexigon_api.users.UserToken"
          }
        },
        "required": [
          "tokenId",
          "token"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.DeleteUserAction": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.DeleteUserTokenAction": {
        "type": "object",
        "properties": {
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserTokenId"
          }
        },
        "required": [
          "tokenId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.GetDevicePermissionsAction": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "deviceId": {
            "$ref": "#/components/schemas/nexigon_api.devices.DeviceId"
          }
        },
        "required": [
          "userId",
          "deviceId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.GetDevicePermissionsOutput": {
        "type": "object",
        "description": "Output of checking the permissions of a user for a given device.",
        "properties": {
          "hasAccess": {
            "type": "boolean"
          }
        },
        "required": [
          "hasAccess"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.GetUserDetailsAction": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.GetUserDetailsOutput": {
        "type": "object",
        "description": "Information about the user.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "email": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          }
        },
        "required": [
          "userId",
          "email",
          "isAdmin"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.InitiateUserSessionAction": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "userAgent": {
            "type": "string"
          },
          "validForSecs": {
            "type": "integer",
            "format": "uint32"
          }
        },
        "required": [
          "email",
          "password",
          "userAgent"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.InitiateUserSessionOutput": {
        "description": "Output of initiating a user session.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "InvalidCredentials"
              }
            },
            "required": [
              "result"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Created"
              },
              "userId": {
                "$ref": "#/components/schemas/nexigon_api.users.UserId"
              },
              "sessionId": {
                "$ref": "#/components/schemas/nexigon_api.users.UserSessionId"
              },
              "sessionToken": {
                "$ref": "#/components/schemas/nexigon_api.users.UserSessionToken"
              }
            },
            "required": [
              "result",
              "userId",
              "sessionId",
              "sessionToken"
            ]
          }
        ]
      },
      "nexigon_api.users.InitiateUserSessionSuccess": {
        "type": "object",
        "description": "Session was created successfully.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "sessionId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserSessionId"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/nexigon_api.users.UserSessionToken"
          }
        },
        "required": [
          "userId",
          "sessionId",
          "sessionToken"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUserOrganizationInvitationsAction": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUserOrganizationInvitationsItem": {
        "type": "object",
        "description": "Organization invitation item.",
        "properties": {
          "invitationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationInvitationId"
          },
          "organization": {
            "$ref": "#/components/schemas/nexigon_api.users.QueryUserOrganizationInvitationsItemOrganization"
          }
        },
        "required": [
          "invitationId",
          "organization"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUserOrganizationInvitationsItemOrganization": {
        "type": "object",
        "description": "Organization invitation item organization.",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "organizationId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUserOrganizationInvitationsOutput": {
        "type": "object",
        "description": "Output of querying the organization invitations of a user.",
        "properties": {
          "invitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.users.QueryUserOrganizationInvitationsItem"
            }
          }
        },
        "required": [
          "invitations"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUserOrganizationsAction": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUserOrganizationsItem": {
        "type": "object",
        "description": "Organization item.",
        "properties": {
          "organizationId": {
            "$ref": "#/components/schemas/nexigon_api.organizations.OrganizationId"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "organizationId",
          "name"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUserOrganizationsOutput": {
        "type": "object",
        "description": "Output of querying the organizations of a user.",
        "properties": {
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.users.QueryUserOrganizationsItem"
            }
          }
        },
        "required": [
          "organizations"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUserSessionsAction": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUserSessionsOutput": {
        "type": "object",
        "description": "Output of querying the sessions of a user.",
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.users.UserSession"
            }
          }
        },
        "required": [
          "sessions"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUserTokensAction": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUserTokensItem": {
        "type": "object",
        "description": "User token item.",
        "properties": {
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserTokenId"
          },
          "createdAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "tokenId",
          "createdAt"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUserTokensOutput": {
        "type": "object",
        "description": "Output of querying the tokens of a user.",
        "properties": {
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.users.QueryUserTokensItem"
            }
          }
        },
        "required": [
          "tokens"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUsersAction": {
        "type": "object",
        "properties": {},
        "required": [],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUsersItem": {
        "type": "object",
        "description": "User item.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "email": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          }
        },
        "required": [
          "userId",
          "email",
          "isAdmin"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.QueryUsersOutput": {
        "type": "object",
        "description": "Output of querying the users of the instance.",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nexigon_api.users.QueryUsersItem"
            }
          }
        },
        "required": [
          "users"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.RegisterUserAction": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "consentedToTerms": {
            "type": "boolean"
          },
          "consentedToMarketing": {
            "type": "boolean"
          }
        },
        "required": [
          "email",
          "password",
          "consentedToTerms"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.RegisterUserOutput": {
        "description": "Output of registering a new user.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Created"
              },
              "status": {
                "$ref": "#/components/schemas/nexigon_api.users.UserRegistrationStatus"
              },
              "message": {
                "type": "string"
              },
              "createdAt": {
                "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
              }
            },
            "required": [
              "result",
              "status",
              "createdAt"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "Pending"
              },
              "status": {
                "$ref": "#/components/schemas/nexigon_api.users.UserRegistrationStatus"
              },
              "message": {
                "type": "string"
              },
              "createdAt": {
                "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
              }
            },
            "required": [
              "result",
              "status",
              "createdAt"
            ]
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "const": "EmailAlreadyExists"
              }
            },
            "required": [
              "result"
            ]
          }
        ]
      },
      "nexigon_api.users.ResendRegistrationEmailAction": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.SetUserDisplayNameAction": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "displayName": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "displayName"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.SetUserIsAdminAction": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "isAdmin": {
            "type": "boolean"
          }
        },
        "required": [
          "userId",
          "isAdmin"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.SetUserPasswordAction": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "password"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.TerminateUserSessionAction": {
        "type": "object",
        "properties": {
          "sessionId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserSessionId"
          }
        },
        "required": [
          "sessionId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserCreatedEvent": {
        "type": "object",
        "description": "Event indicating that a user has been created.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "email"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserDeletedEvent": {
        "type": "object",
        "description": "Event indicating that a user has been deleted.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserId": {
        "type": "string",
        "description": "Unique ID of a user."
      },
      "nexigon_api.users.UserRegistration": {
        "type": "object",
        "description": "User registration.",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/nexigon_api.users.UserRegistrationStatus"
          },
          "message": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          }
        },
        "required": [
          "status",
          "createdAt"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserRegistrationCompletedEvent": {
        "type": "object",
        "description": "Event indicating that the registration of a user has been completed.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserRegistrationCreatedEvent": {
        "type": "object",
        "description": "Event indicating that a new user has registered.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "email"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserRegistrationEmailSentEvent": {
        "type": "object",
        "description": "Event indicating that a registration email has been sent.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "email"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserRegistrationStatus": {
        "enum": [
          {
            "tag": "Pending"
          },
          {
            "tag": "Waiting"
          },
          {
            "tag": "Completed"
          },
          {
            "tag": "Failed"
          }
        ],
        "description": ""
      },
      "nexigon_api.users.UserSession": {
        "type": "object",
        "description": "User session.",
        "properties": {
          "sessionId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserSessionId"
          },
          "createdAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          },
          "expiresAt": {
            "$ref": "#/components/schemas/nexigon_api.datetime.Timestamp"
          },
          "userAgent": {
            "type": "string"
          }
        },
        "required": [
          "sessionId",
          "createdAt",
          "expiresAt",
          "userAgent"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserSessionId": {
        "type": "string",
        "description": "User session ID."
      },
      "nexigon_api.users.UserSessionInitiatedEvent": {
        "type": "object",
        "description": "Event indicating that a user session has been initiated.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "sessionId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserSessionId"
          }
        },
        "required": [
          "userId",
          "sessionId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserSessionToken": {
        "type": "string",
        "description": "User session token."
      },
      "nexigon_api.users.UserSetIsAdminEvent": {
        "type": "object",
        "description": "Event indicating that administrator privileges have been granted or revoked.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "isAdmin": {
            "type": "boolean"
          }
        },
        "required": [
          "userId",
          "isAdmin"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserSetPasswordEvent": {
        "type": "object",
        "description": "Event indicating that a user password has been changed.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          }
        },
        "required": [
          "userId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserToken": {
        "type": "string",
        "description": "User token."
      },
      "nexigon_api.users.UserTokenCreatedEvent": {
        "type": "object",
        "description": "Event indicating that a user token has been created.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserTokenId"
          }
        },
        "required": [
          "userId",
          "tokenId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserTokenDeletedEvent": {
        "type": "object",
        "description": "Event indicating that a user token has been deleted.",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserId"
          },
          "tokenId": {
            "$ref": "#/components/schemas/nexigon_api.users.UserTokenId"
          }
        },
        "required": [
          "userId",
          "tokenId"
        ],
        "unevaluatedProperties": false
      },
      "nexigon_api.users.UserTokenId": {
        "type": "string",
        "description": "Unique ID of a user token."
      }
    }
  },
  "tags": [
    {
      "name": "actor",
      "x-displayName": "Actor"
    },
    {
      "name": "users",
      "x-displayName": "Users"
    },
    {
      "name": "organizations",
      "x-displayName": "Organizations"
    },
    {
      "name": "projects",
      "x-displayName": "Projects"
    },
    {
      "name": "devices",
      "x-displayName": "Devices"
    },
    {
      "name": "repositories",
      "x-displayName": "Repositories"
    },
    {
      "name": "instance",
      "x-displayName": "Instance"
    },
    {
      "name": "cluster",
      "x-displayName": "Cluster"
    },
    {
      "name": "audit",
      "x-displayName": "Audit"
    },
    {
      "name": "jobs",
      "x-displayName": "Jobs"
    }
  ]
}